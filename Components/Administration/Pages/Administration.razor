@page "/Administration"

@using Finance_Monitor.Models
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Identity;

@inject UserManager<ApplicationUser> UserManager
@inject RoleManager<IdentityRole> RoleManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IConfiguration Configuration


<AuthorizeView Roles="Administrator">
    <Authorized>
        <h3>Administration</h3>
        <p>You are authorized as Administrator.</p>
    </Authorized>
    <NotAuthorized>
        <p>You are not authorized to view this page.</p>
    </NotAuthorized>
</AuthorizeView>


@code {
    string AdministratorRole = "Administrator";

    protected override async Task OnInitializedAsync()
    {

        // Retrieve the Admin Username from Configuration
        string adminUsername = Configuration["AdminCredentials:Username"] ?? "";

        // Ensure there is a Administrator Role
        var RoleResult = await RoleManager.FindByNameAsync(AdministratorRole);
        if (RoleResult == null)
        {
            // Create Administrator Role
            await RoleManager.CreateAsync(new IdentityRole(AdministratorRole));
        }

        // Ensure the default Administrator is an Administrator
        var user = await UserManager.FindByNameAsync(adminUsername);
        if (user != null)
        {
            // Is the default Administrator already an Administrator?
            var UserResult = await UserManager.IsInRoleAsync(user, AdministratorRole);
            if (!UserResult)
            {
                // Make the default Administrator an Administrator
                await UserManager.AddToRoleAsync(user, AdministratorRole);
            }
        }
    }
}